---

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

stages:
  - test

.lint:
  stage: test
  allow_failure: true
  interruptible: true
  before_script:
    - apk add --no-cache py3-pip bc
    - pip3 install --no-cache-dir anybadge
    - mkdir -p public/badges
    - echo undefined > public/badges/$CI_JOB_NAME.score
  after_script:
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 7=red 8=orange 9=yellow 10=green
    - |
      echo "Your score is: $(cat public/badges/$CI_JOB_NAME.score)"
  artifacts:
    paths:
      - public
    when: always

markdownlint:
  extends: .lint
  image: pipelinecomponents/remark-lint:0.14.0
  interruptible: true
  rules:
    - exists:
        - "**/**.md"
  script:
    - |
      cat <<EOF > .remarkrc.yml
      plugins:
        - preset-lint-markdown-style-guide
        - ["remark-lint-maximum-line-length", false]
      EOF
    - remark --no-stdout --no-color --no-ignore . 2>&1 | tee /tmp/lint
    - |
      export WARNINGS=$(cat /tmp/lint | grep "  warning  " | wc -l)
    - export LINES=$(find . -type f -name "*.md" -exec cat {} \; | sed '/^\s*$/d' | wc -l)
    - echo "scale=5; a=(($WARNINGS / $LINES) * 40); scale=2; (10 - a) / 1" | bc > public/badges/$CI_JOB_NAME.score

dockerlint:
  extends: .lint
  image: hadolint/hadolint:v1.17.5
  interruptible: true
  rules:
    - exists:
        - "**/**Dockerfile**"
  variables:
    IGNORE_LIST: --ignore=DL3008 --ignore=DL3018
  script:
    - find . -name "*Dockerfile*" -exec hadolint $IGNORE_LIST {} \; | tee /tmp/lint || true
    - export WARNINGS=$(cat /tmp/lint | wc -l)
    - export LINES=$(find . -type f -name "*Dockerfile*" -exec cat {} \; | sed '/^\s*$/d' | wc -l)
    - echo "scale=5; a=(($WARNINGS / $LINES) * 40); scale=2; (10 - a) / 1" | bc > public/badges/$CI_JOB_NAME.score

yamllint:
  extends: .lint
  image:
    name: cytopia/yamllint:1.22
    entrypoint: [""]
  interruptible: true
  rules:
    - exists:
        - "**/**.yml"
        - "**/**.yaml"
  script:
    - (cd .. && find ! -path "**/.git/**" -type f -name Chart.yaml | sed 's#/Chart.yaml##g' | xargs -r -t rm -rf)
    - |
      yamllint -d "{extends: default, rules: {line-length: disable}}" -f parsable . &> /tmp/lint || true
    - |
      yamllint -d "{extends: default, rules: {line-length: disable}}" . || true
    - export ERRORS=$(grep '\[error\]' /tmp/lint | wc -l)
    - export WARNINGS=$(grep '\[warning\]' /tmp/lint | wc -l)
    - export LINES=$(find \( -name "*.yml" -o -name "*.yaml" \) -exec cat {} \; | sed '/^\s*$/d' | wc -l)
    - echo "scale=5; a=(((10 * $ERRORS + 4 * $WARNINGS) / $LINES) * 10); scale=2; (10 - a) / 1" | bc > public/badges/$CI_JOB_NAME.score

helmlint:
  stage: test
  image: dtzar/helm-kubectl:3.3.4
  interruptible: true
  rules:
    - exists:
        - "**/Chart.yaml"
  script:
    - for chart in $(find ! -path "**/.git/*" -name Chart.yaml); do helm lint $chart/../; echo; done
