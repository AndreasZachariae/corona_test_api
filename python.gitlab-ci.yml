---

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

stages:
  - init
  - test

variables:
  PYTHON_VERSION: "3.7"
  PIPENV_VENV_IN_PROJECT: "1"
  PYTHON_PROJECT_DIR: "."
  PROJECT_NAME: $CI_PROJECT_NAME

pipenv-install:
  stage: init
  image: python:$PYTHON_VERSION-slim
  interruptible: true
  before_script:
    - cd $PYTHON_PROJECT_DIR
    - pip install pipenv
  script:
    - pipenv install --dev
    - pipenv lock --requirements > .venv/requirements.txt
  cache:
    paths:
      - $PYTHON_PROJECT_DIR/.venv
    key: $CI_COMMIT_REF_NAME
    untracked: true
    policy: pull-push

pylint:
  stage: test
  image: python:$PYTHON_VERSION-slim
  interruptible: true
  before_script:
    - cd $PYTHON_PROJECT_DIR
    - mkdir -p $CI_PROJECT_DIR/public/badges $CI_PROJECT_DIR/public/lint
    - echo undefined > $CI_PROJECT_DIR/public/badges/$CI_JOB_NAME.score
    - source .venv/bin/activate
    - pip install pylint anybadge jinja2 pylint-gitlab
    - apt update
    - apt install -y wget
    - wget -q https://gitlab.com/hs-karlsruhe/ci-templates/-/raw/master/pylintrc -O /etc/pylintrc
  script:
    - pylint --exit-zero --output-format=text $(find $CI_PROJECT_DIR -type f -name "*.py" ! -path "**/.venv/**") | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint.txt > $CI_PROJECT_DIR/public/badges/$CI_JOB_NAME.score
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find $CI_PROJECT_DIR -type f -name "*.py" ! -path "**/.venv/**") > $CI_PROJECT_DIR/codeclimate.json
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find $CI_PROJECT_DIR -type f -name "*.py" ! -path "**/.venv/**") > $CI_PROJECT_DIR/public/lint/index.html
  after_script:
    - cd $PYTHON_PROJECT_DIR
    - source .venv/bin/activate
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat $CI_PROJECT_DIR/public/badges/$CI_JOB_NAME.score) --file=$CI_PROJECT_DIR/public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green
    - |
      echo "Your score is: $(cat $CI_PROJECT_DIR/public/badges/$CI_JOB_NAME.score)"
  cache:
    paths:
      - $PYTHON_PROJECT_DIR/.venv
    key: $CI_COMMIT_REF_NAME
    policy: pull
  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always

pytest:
  stage: test
  image: python:$PYTHON_VERSION-slim
  interruptible: true
  rules:
    - exists:
        - "**/tests/**.py"
  coverage: '/TOTAL.+?(\d+)%/'
  #services:
  #  - docker:19.03.5-dind
  #variables:
  #  DOCKER_HOST: tcp://docker:2375
  before_script:
    - cd $PYTHON_PROJECT_DIR
    - mkdir -p $CI_PROJECT_DIR/public/test
  script:
    - source .venv/bin/activate
    - export ret=0
    - pytest --cov-report=term --cov-report=html:$CI_PROJECT_DIR/public/test --cov=$(echo $PROJECT_NAME | sed "s/-/_/g") --junitxml=$CI_PROJECT_DIR/public/test/tests.xml tests/ || ret=$?; if [ $ret -ne 5 ] && [ $ret -ne 0 ] ; then exit $ret; fi
  cache:
    paths:
      - $PYTHON_PROJECT_DIR/.venv
    key: $CI_COMMIT_REF_NAME
    policy: pull
  artifacts:
    name: coverage
    paths:
      - public
    reports:
      junit: public/test/tests.xml
    when: always

docker-build:
  stage: build
  image: docker:19.03.5
  interruptible: true
  rules:
    - exists:
        - "**/app.py"
      if: '$JOB_DOCKER_BUILD == "yes"'
  services:
    - docker:19.03.5-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - cd $PYTHON_PROJECT_DIR
  script:
    - cp .venv/requirements.txt requirements.txt
    - echo ".venv/\n.git/" > .dockerignore
    - echo "FROM python:$PYTHON_VERSION-slim" > Dockerfile
    - echo "WORKDIR /app" >> Dockerfile
    - echo "COPY . /app/" >> Dockerfile
    - echo "RUN pip install --no-cache-dir -r requirements.txt" >> Dockerfile
    - echo 'CMD ["python", "'$(echo $PROJECT_NAME | sed "s/-/_/g")'/app.py"]' >> Dockerfile
    - docker build --pull --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  cache:
    paths:
      - $PYTHON_PROJECT_DIR/.venv
    key: $CI_COMMIT_REF_NAME
    policy: pull
